/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { BaseHttpRequest } from './core/BaseHttpRequest';
import type { OpenAPIConfig } from './core/OpenAPI';
import { FetchHttpRequest } from './core/FetchHttpRequest';

import { AccessApplicationsService } from './services/AccessApplicationsService';
import { AccessAuthenticationLogsService } from './services/AccessAuthenticationLogsService';
import { AccessBookmarkApplicationsDeprecatedService } from './services/AccessBookmarkApplicationsDeprecatedService';
import { AccessGroupsService } from './services/AccessGroupsService';
import { AccessIdentityProvidersService } from './services/AccessIdentityProvidersService';
import { AccessKeyConfigurationService } from './services/AccessKeyConfigurationService';
import { AccessMTlsAuthenticationService } from './services/AccessMTlsAuthenticationService';
import { AccessPoliciesService } from './services/AccessPoliciesService';
import { AccessServiceTokensService } from './services/AccessServiceTokensService';
import { AccessShortLivedCertificateCAsService } from './services/AccessShortLivedCertificateCAsService';
import { AccountBillingProfileService } from './services/AccountBillingProfileService';
import { AccountLevelCustomNameserversService } from './services/AccountLevelCustomNameserversService';
import { AccountLevelCustomNameserversUsageForAZoneService } from './services/AccountLevelCustomNameserversUsageForAZoneService';
import { AccountLoadBalancerMonitorsService } from './services/AccountLoadBalancerMonitorsService';
import { AccountLoadBalancerPoolsService } from './services/AccountLoadBalancerPoolsService';
import { AccountLoadBalancerSearchService } from './services/AccountLoadBalancerSearchService';
import { AccountMembersService } from './services/AccountMembersService';
import { AccountRailgunsService } from './services/AccountRailgunsService';
import { AccountRolesService } from './services/AccountRolesService';
import { AccountRulesetsService } from './services/AccountRulesetsService';
import { AccountsService } from './services/AccountsService';
import { AccountSubscriptionsService } from './services/AccountSubscriptionsService';
import { AnalyzeCertificateService } from './services/AnalyzeCertificateService';
import { ApiShieldEndpointManagementService } from './services/ApiShieldEndpointManagementService';
import { ApiShieldSettingsService } from './services/ApiShieldSettingsService';
import { ArgoAnalyticsForGeolocationService } from './services/ArgoAnalyticsForGeolocationService';
import { ArgoAnalyticsForZoneService } from './services/ArgoAnalyticsForZoneService';
import { ArgoSmartRoutingService } from './services/ArgoSmartRoutingService';
import { ArgoTunnelService } from './services/ArgoTunnelService';
import { AsnIntelligenceService } from './services/AsnIntelligenceService';
import { AuditLogsService } from './services/AuditLogsService';
import { AvailablePageRulesSettingsService } from './services/AvailablePageRulesSettingsService';
import { CertificatePacksService } from './services/CertificatePacksService';
import { CloudflareImagesService } from './services/CloudflareImagesService';
import { CloudflareImagesKeysService } from './services/CloudflareImagesKeysService';
import { CloudflareImagesVariantsService } from './services/CloudflareImagesVariantsService';
import { CloudflareIPsService } from './services/CloudflareIPsService';
import { CloudflareTunnelService } from './services/CloudflareTunnelService';
import { CloudflareTunnelConfigurationService } from './services/CloudflareTunnelConfigurationService';
import { CustomErrorResponsesService } from './services/CustomErrorResponsesService';
import { CustomHostnameFallbackOriginForAZoneService } from './services/CustomHostnameFallbackOriginForAZoneService';
import { CustomHostnameForAZoneService } from './services/CustomHostnameForAZoneService';
import { CustomPagesForAnAccountService } from './services/CustomPagesForAnAccountService';
import { CustomPagesForAZoneService } from './services/CustomPagesForAZoneService';
import { CustomSslForAZoneService } from './services/CustomSslForAZoneService';
import { DevicePostureIntegrationsService } from './services/DevicePostureIntegrationsService';
import { DevicePostureRulesService } from './services/DevicePostureRulesService';
import { DevicesService } from './services/DevicesService';
import { DiagnosticsService } from './services/DiagnosticsService';
import { DlpPatternValidationService } from './services/DlpPatternValidationService';
import { DlpProfilesService } from './services/DlpProfilesService';
import { DnsAnalyticsService } from './services/DnsAnalyticsService';
import { DnsFirewallService } from './services/DnsFirewallService';
import { DnsFirewallAnalyticsService } from './services/DnsFirewallAnalyticsService';
import { DnsFirewallAnalyticsLegacyService } from './services/DnsFirewallAnalyticsLegacyService';
import { DnsFirewallLegacyService } from './services/DnsFirewallLegacyService';
import { DnsRecordsForAZoneService } from './services/DnsRecordsForAZoneService';
import { DnssecService } from './services/DnssecService';
import { DomainHistoryService } from './services/DomainHistoryService';
import { DomainIntelligenceService } from './services/DomainIntelligenceService';
import { DurableObjectsNamespaceService } from './services/DurableObjectsNamespaceService';
import { EmailRoutingDestinationAddressesService } from './services/EmailRoutingDestinationAddressesService';
import { EmailRoutingRoutingRulesService } from './services/EmailRoutingRoutingRulesService';
import { EmailRoutingSettingsService } from './services/EmailRoutingSettingsService';
import { FiltersService } from './services/FiltersService';
import { FirewallRulesService } from './services/FirewallRulesService';
import { HealthChecksService } from './services/HealthChecksService';
import { IpAccessRulesForAnAccountService } from './services/IpAccessRulesForAnAccountService';
import { IpAccessRulesForAUserService } from './services/IpAccessRulesForAUserService';
import { IpAccessRulesForAZoneService } from './services/IpAccessRulesForAZoneService';
import { IpAddressManagementAddressMapsService } from './services/IpAddressManagementAddressMapsService';
import { IpAddressManagementDynamicAdvertisementService } from './services/IpAddressManagementDynamicAdvertisementService';
import { IpAddressManagementPrefixDelegationService } from './services/IpAddressManagementPrefixDelegationService';
import { IpAddressManagementPrefixesService } from './services/IpAddressManagementPrefixesService';
import { IpIntelligenceService } from './services/IpIntelligenceService';
import { IpListService } from './services/IpListService';
import { KeylessSslForAZoneService } from './services/KeylessSslForAZoneService';
import { ListsService } from './services/ListsService';
import { LoadBalancerHealthcheckEventsService } from './services/LoadBalancerHealthcheckEventsService';
import { LoadBalancerMonitorsService } from './services/LoadBalancerMonitorsService';
import { LoadBalancerPoolsService } from './services/LoadBalancerPoolsService';
import { LoadBalancerRegionsService } from './services/LoadBalancerRegionsService';
import { LoadBalancersService } from './services/LoadBalancersService';
import { LogpushJobsService } from './services/LogpushJobsService';
import { LogsReceivedService } from './services/LogsReceivedService';
import { MagicGreTunnelsService } from './services/MagicGreTunnelsService';
import { MagicInterconnectsService } from './services/MagicInterconnectsService';
import { MagicIPsecTunnelsService } from './services/MagicIPsecTunnelsService';
import { MagicNetworkMonitoringConfigurationService } from './services/MagicNetworkMonitoringConfigurationService';
import { MagicNetworkMonitoringRulesService } from './services/MagicNetworkMonitoringRulesService';
import { MagicPcapCollectionService } from './services/MagicPcapCollectionService';
import { MagicStaticRoutesService } from './services/MagicStaticRoutesService';
import { ManagedTransformsService } from './services/ManagedTransformsService';
import { MiscategorizationService } from './services/MiscategorizationService';
import { NotificationAlertTypesService } from './services/NotificationAlertTypesService';
import { NotificationDestinationsWithPagerDutyService } from './services/NotificationDestinationsWithPagerDutyService';
import { NotificationHistoryService } from './services/NotificationHistoryService';
import { NotificationMechanismEligibilityService } from './services/NotificationMechanismEligibilityService';
import { NotificationPoliciesService } from './services/NotificationPoliciesService';
import { NotificationWebhooksService } from './services/NotificationWebhooksService';
import { OrganizationInvitesService } from './services/OrganizationInvitesService';
import { OrganizationMembersService } from './services/OrganizationMembersService';
import { OrganizationRailgunService } from './services/OrganizationRailgunService';
import { OrganizationRolesService } from './services/OrganizationRolesService';
import { OrganizationsDeprecatedService } from './services/OrganizationsDeprecatedService';
import { OriginCaService } from './services/OriginCaService';
import { PageRulesService } from './services/PageRulesService';
import { PagesDeploymentService } from './services/PagesDeploymentService';
import { PagesDomainsService } from './services/PagesDomainsService';
import { PageShieldService } from './services/PageShieldService';
import { PagesProjectService } from './services/PagesProjectService';
import { PassiveDnsByIpService } from './services/PassiveDnsByIpService';
import { PerHostnameAuthenticatedOriginPullService } from './services/PerHostnameAuthenticatedOriginPullService';
import { PermissionGroupsService } from './services/PermissionGroupsService';
import { PhishingUrlScannerService } from './services/PhishingUrlScannerService';
import { QueueService } from './services/QueueService';
import { R2BucketService } from './services/R2BucketService';
import { RadarAnnotationsService } from './services/RadarAnnotationsService';
import { RadarAttacksService } from './services/RadarAttacksService';
import { RadarBgpService } from './services/RadarBgpService';
import { RadarDatasetsService } from './services/RadarDatasetsService';
import { RadarDnsService } from './services/RadarDnsService';
import { RadarEntitiesService } from './services/RadarEntitiesService';
import { RadarHttpService } from './services/RadarHttpService';
import { RadarNetFlowsService } from './services/RadarNetFlowsService';
import { RadarRankingService } from './services/RadarRankingService';
import { RadarSearchService } from './services/RadarSearchService';
import { RadarSpecialeventsService } from './services/RadarSpecialeventsService';
import { RadarVerifiedBotsService } from './services/RadarVerifiedBotsService';
import { RailgunService } from './services/RailgunService';
import { RailgunConnectionsService } from './services/RailgunConnectionsService';
import { RailgunConnectionsForAZoneService } from './services/RailgunConnectionsForAZoneService';
import { RateLimitsForAZoneService } from './services/RateLimitsForAZoneService';
import { RegistrarDomainsService } from './services/RegistrarDomainsService';
import { SecondaryDnsAclService } from './services/SecondaryDnsAclService';
import { SecondaryDnsPeerService } from './services/SecondaryDnsPeerService';
import { SecondaryDnsPrimaryZoneService } from './services/SecondaryDnsPrimaryZoneService';
import { SecondaryDnsSecondaryZoneService } from './services/SecondaryDnsSecondaryZoneService';
import { SecondaryDnsTsigService } from './services/SecondaryDnsTsigService';
import { SpectrumAggregateAnalyticsService } from './services/SpectrumAggregateAnalyticsService';
import { SpectrumAnalyticsByTimeService } from './services/SpectrumAnalyticsByTimeService';
import { SpectrumAnalyticsSummaryService } from './services/SpectrumAnalyticsSummaryService';
import { SpectrumApplicationsService } from './services/SpectrumApplicationsService';
import { SslTlsModeRecommendationService } from './services/SslTlsModeRecommendationService';
import { SslVerificationService } from './services/SslVerificationService';
import { StreamLiveInputsService } from './services/StreamLiveInputsService';
import { StreamMp4DownloadsService } from './services/StreamMp4DownloadsService';
import { StreamSigningKeysService } from './services/StreamSigningKeysService';
import { StreamSubtitlesCaptionsService } from './services/StreamSubtitlesCaptionsService';
import { StreamVideoClippingService } from './services/StreamVideoClippingService';
import { StreamVideosService } from './services/StreamVideosService';
import { StreamWatermarkProfileService } from './services/StreamWatermarkProfileService';
import { StreamWebhookService } from './services/StreamWebhookService';
import { TotalTlsService } from './services/TotalTlsService';
import { TransformRulesService } from './services/TransformRulesService';
import { TunnelRouteService } from './services/TunnelRouteService';
import { TunnelVirtualNetworkService } from './services/TunnelVirtualNetworkService';
import { UniversalSslSettingsForAZoneService } from './services/UniversalSslSettingsForAZoneService';
import { UrlNormalizationService } from './services/UrlNormalizationService';
import { UserService } from './services/UserService';
import { UserAgentBlockingRulesService } from './services/UserAgentBlockingRulesService';
import { UserApiTokensService } from './services/UserApiTokensService';
import { UserBillingHistoryService } from './services/UserBillingHistoryService';
import { UserBillingProfileService } from './services/UserBillingProfileService';
import { UserSAccountMembershipsService } from './services/UserSAccountMembershipsService';
import { UserSInvitesService } from './services/UserSInvitesService';
import { UserSOrganizationsService } from './services/UserSOrganizationsService';
import { UserSubscriptionService } from './services/UserSubscriptionService';
import { WafOverridesService } from './services/WafOverridesService';
import { WafPackagesService } from './services/WafPackagesService';
import { WafRuleGroupsService } from './services/WafRuleGroupsService';
import { WafRulesService } from './services/WafRulesService';
import { WaitingRoomService } from './services/WaitingRoomService';
import { Web3HostnameService } from './services/Web3HostnameService';
import { WhoisRecordService } from './services/WhoisRecordService';
import { WorkerAccountSettingsService } from './services/WorkerAccountSettingsService';
import { WorkerBindingDeprecatedService } from './services/WorkerBindingDeprecatedService';
import { WorkerCronTriggerService } from './services/WorkerCronTriggerService';
import { WorkerDomainService } from './services/WorkerDomainService';
import { WorkerFiltersDeprecatedService } from './services/WorkerFiltersDeprecatedService';
import { WorkerRoutesService } from './services/WorkerRoutesService';
import { WorkerScriptService } from './services/WorkerScriptService';
import { WorkerScriptDeprecatedService } from './services/WorkerScriptDeprecatedService';
import { WorkersKvNamespaceService } from './services/WorkersKvNamespaceService';
import { WorkersKvRequestAnalyticsService } from './services/WorkersKvRequestAnalyticsService';
import { WorkersKvStoredDataAnalyticsService } from './services/WorkersKvStoredDataAnalyticsService';
import { WorkerSubdomainService } from './services/WorkerSubdomainService';
import { WorkerTailLogsService } from './services/WorkerTailLogsService';
import { ZeroTrustAccountsService } from './services/ZeroTrustAccountsService';
import { ZeroTrustGatewayApplicationAndApplicationTypeMappingsService } from './services/ZeroTrustGatewayApplicationAndApplicationTypeMappingsService';
import { ZeroTrustGatewayCategoriesService } from './services/ZeroTrustGatewayCategoriesService';
import { ZeroTrustGatewayLocationsService } from './services/ZeroTrustGatewayLocationsService';
import { ZeroTrustGatewayProxyEndpointsService } from './services/ZeroTrustGatewayProxyEndpointsService';
import { ZeroTrustGatewayRulesService } from './services/ZeroTrustGatewayRulesService';
import { ZeroTrustListsService } from './services/ZeroTrustListsService';
import { ZeroTrustOrganizationService } from './services/ZeroTrustOrganizationService';
import { ZeroTrustSeatsService } from './services/ZeroTrustSeatsService';
import { ZeroTrustUsersService } from './services/ZeroTrustUsersService';
import { ZoneService } from './services/ZoneService';
import { ZoneAnalyticsDeprecatedService } from './services/ZoneAnalyticsDeprecatedService';
import { ZoneCacheSettingsService } from './services/ZoneCacheSettingsService';
import { ZoneLevelAccessApplicationsService } from './services/ZoneLevelAccessApplicationsService';
import { ZoneLevelAccessGroupsService } from './services/ZoneLevelAccessGroupsService';
import { ZoneLevelAccessIdentityProvidersService } from './services/ZoneLevelAccessIdentityProvidersService';
import { ZoneLevelAccessMTlsAuthenticationService } from './services/ZoneLevelAccessMTlsAuthenticationService';
import { ZoneLevelAccessPoliciesService } from './services/ZoneLevelAccessPoliciesService';
import { ZoneLevelAccessServiceTokensService } from './services/ZoneLevelAccessServiceTokensService';
import { ZoneLevelAccessShortLivedCertificateCAsService } from './services/ZoneLevelAccessShortLivedCertificateCAsService';
import { ZoneLevelAuthenticatedOriginPullsService } from './services/ZoneLevelAuthenticatedOriginPullsService';
import { ZoneLevelZeroTrustOrganizationService } from './services/ZoneLevelZeroTrustOrganizationService';
import { ZoneLockdownService } from './services/ZoneLockdownService';
import { ZoneRatePlanService } from './services/ZoneRatePlanService';
import { ZoneRulesetsService } from './services/ZoneRulesetsService';
import { ZoneSettingsService } from './services/ZoneSettingsService';
import { ZoneSubscriptionService } from './services/ZoneSubscriptionService';

type HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;

export class CloudflareBread {

    public readonly accessApplications: AccessApplicationsService;
    public readonly accessAuthenticationLogs: AccessAuthenticationLogsService;
    public readonly accessBookmarkApplicationsDeprecated: AccessBookmarkApplicationsDeprecatedService;
    public readonly accessGroups: AccessGroupsService;
    public readonly accessIdentityProviders: AccessIdentityProvidersService;
    public readonly accessKeyConfiguration: AccessKeyConfigurationService;
    public readonly accessMTlsAuthentication: AccessMTlsAuthenticationService;
    public readonly accessPolicies: AccessPoliciesService;
    public readonly accessServiceTokens: AccessServiceTokensService;
    public readonly accessShortLivedCertificateCAs: AccessShortLivedCertificateCAsService;
    public readonly accountBillingProfile: AccountBillingProfileService;
    public readonly accountLevelCustomNameservers: AccountLevelCustomNameserversService;
    public readonly accountLevelCustomNameserversUsageForAZone: AccountLevelCustomNameserversUsageForAZoneService;
    public readonly accountLoadBalancerMonitors: AccountLoadBalancerMonitorsService;
    public readonly accountLoadBalancerPools: AccountLoadBalancerPoolsService;
    public readonly accountLoadBalancerSearch: AccountLoadBalancerSearchService;
    public readonly accountMembers: AccountMembersService;
    public readonly accountRailguns: AccountRailgunsService;
    public readonly accountRoles: AccountRolesService;
    public readonly accountRulesets: AccountRulesetsService;
    public readonly accounts: AccountsService;
    public readonly accountSubscriptions: AccountSubscriptionsService;
    public readonly analyzeCertificate: AnalyzeCertificateService;
    public readonly apiShieldEndpointManagement: ApiShieldEndpointManagementService;
    public readonly apiShieldSettings: ApiShieldSettingsService;
    public readonly argoAnalyticsForGeolocation: ArgoAnalyticsForGeolocationService;
    public readonly argoAnalyticsForZone: ArgoAnalyticsForZoneService;
    public readonly argoSmartRouting: ArgoSmartRoutingService;
    public readonly argoTunnel: ArgoTunnelService;
    public readonly asnIntelligence: AsnIntelligenceService;
    public readonly auditLogs: AuditLogsService;
    public readonly availablePageRulesSettings: AvailablePageRulesSettingsService;
    public readonly certificatePacks: CertificatePacksService;
    public readonly cloudflareImages: CloudflareImagesService;
    public readonly cloudflareImagesKeys: CloudflareImagesKeysService;
    public readonly cloudflareImagesVariants: CloudflareImagesVariantsService;
    public readonly cloudflareIPs: CloudflareIPsService;
    public readonly cloudflareTunnel: CloudflareTunnelService;
    public readonly cloudflareTunnelConfiguration: CloudflareTunnelConfigurationService;
    public readonly customErrorResponses: CustomErrorResponsesService;
    public readonly customHostnameFallbackOriginForAZone: CustomHostnameFallbackOriginForAZoneService;
    public readonly customHostnameForAZone: CustomHostnameForAZoneService;
    public readonly customPagesForAnAccount: CustomPagesForAnAccountService;
    public readonly customPagesForAZone: CustomPagesForAZoneService;
    public readonly customSslForAZone: CustomSslForAZoneService;
    public readonly devicePostureIntegrations: DevicePostureIntegrationsService;
    public readonly devicePostureRules: DevicePostureRulesService;
    public readonly devices: DevicesService;
    public readonly diagnostics: DiagnosticsService;
    public readonly dlpPatternValidation: DlpPatternValidationService;
    public readonly dlpProfiles: DlpProfilesService;
    public readonly dnsAnalytics: DnsAnalyticsService;
    public readonly dnsFirewall: DnsFirewallService;
    public readonly dnsFirewallAnalytics: DnsFirewallAnalyticsService;
    public readonly dnsFirewallAnalyticsLegacy: DnsFirewallAnalyticsLegacyService;
    public readonly dnsFirewallLegacy: DnsFirewallLegacyService;
    public readonly dnsRecordsForAZone: DnsRecordsForAZoneService;
    public readonly dnssec: DnssecService;
    public readonly domainHistory: DomainHistoryService;
    public readonly domainIntelligence: DomainIntelligenceService;
    public readonly durableObjectsNamespace: DurableObjectsNamespaceService;
    public readonly emailRoutingDestinationAddresses: EmailRoutingDestinationAddressesService;
    public readonly emailRoutingRoutingRules: EmailRoutingRoutingRulesService;
    public readonly emailRoutingSettings: EmailRoutingSettingsService;
    public readonly filters: FiltersService;
    public readonly firewallRules: FirewallRulesService;
    public readonly healthChecks: HealthChecksService;
    public readonly ipAccessRulesForAnAccount: IpAccessRulesForAnAccountService;
    public readonly ipAccessRulesForAUser: IpAccessRulesForAUserService;
    public readonly ipAccessRulesForAZone: IpAccessRulesForAZoneService;
    public readonly ipAddressManagementAddressMaps: IpAddressManagementAddressMapsService;
    public readonly ipAddressManagementDynamicAdvertisement: IpAddressManagementDynamicAdvertisementService;
    public readonly ipAddressManagementPrefixDelegation: IpAddressManagementPrefixDelegationService;
    public readonly ipAddressManagementPrefixes: IpAddressManagementPrefixesService;
    public readonly ipIntelligence: IpIntelligenceService;
    public readonly ipList: IpListService;
    public readonly keylessSslForAZone: KeylessSslForAZoneService;
    public readonly lists: ListsService;
    public readonly loadBalancerHealthcheckEvents: LoadBalancerHealthcheckEventsService;
    public readonly loadBalancerMonitors: LoadBalancerMonitorsService;
    public readonly loadBalancerPools: LoadBalancerPoolsService;
    public readonly loadBalancerRegions: LoadBalancerRegionsService;
    public readonly loadBalancers: LoadBalancersService;
    public readonly logpushJobs: LogpushJobsService;
    public readonly logsReceived: LogsReceivedService;
    public readonly magicGreTunnels: MagicGreTunnelsService;
    public readonly magicInterconnects: MagicInterconnectsService;
    public readonly magicIPsecTunnels: MagicIPsecTunnelsService;
    public readonly magicNetworkMonitoringConfiguration: MagicNetworkMonitoringConfigurationService;
    public readonly magicNetworkMonitoringRules: MagicNetworkMonitoringRulesService;
    public readonly magicPcapCollection: MagicPcapCollectionService;
    public readonly magicStaticRoutes: MagicStaticRoutesService;
    public readonly managedTransforms: ManagedTransformsService;
    public readonly miscategorization: MiscategorizationService;
    public readonly notificationAlertTypes: NotificationAlertTypesService;
    public readonly notificationDestinationsWithPagerDuty: NotificationDestinationsWithPagerDutyService;
    public readonly notificationHistory: NotificationHistoryService;
    public readonly notificationMechanismEligibility: NotificationMechanismEligibilityService;
    public readonly notificationPolicies: NotificationPoliciesService;
    public readonly notificationWebhooks: NotificationWebhooksService;
    public readonly organizationInvites: OrganizationInvitesService;
    public readonly organizationMembers: OrganizationMembersService;
    public readonly organizationRailgun: OrganizationRailgunService;
    public readonly organizationRoles: OrganizationRolesService;
    public readonly organizationsDeprecated: OrganizationsDeprecatedService;
    public readonly originCa: OriginCaService;
    public readonly pageRules: PageRulesService;
    public readonly pagesDeployment: PagesDeploymentService;
    public readonly pagesDomains: PagesDomainsService;
    public readonly pageShield: PageShieldService;
    public readonly pagesProject: PagesProjectService;
    public readonly passiveDnsByIp: PassiveDnsByIpService;
    public readonly perHostnameAuthenticatedOriginPull: PerHostnameAuthenticatedOriginPullService;
    public readonly permissionGroups: PermissionGroupsService;
    public readonly phishingUrlScanner: PhishingUrlScannerService;
    public readonly queue: QueueService;
    public readonly r2Bucket: R2BucketService;
    public readonly radarAnnotations: RadarAnnotationsService;
    public readonly radarAttacks: RadarAttacksService;
    public readonly radarBgp: RadarBgpService;
    public readonly radarDatasets: RadarDatasetsService;
    public readonly radarDns: RadarDnsService;
    public readonly radarEntities: RadarEntitiesService;
    public readonly radarHttp: RadarHttpService;
    public readonly radarNetFlows: RadarNetFlowsService;
    public readonly radarRanking: RadarRankingService;
    public readonly radarSearch: RadarSearchService;
    public readonly radarSpecialevents: RadarSpecialeventsService;
    public readonly radarVerifiedBots: RadarVerifiedBotsService;
    public readonly railgun: RailgunService;
    public readonly railgunConnections: RailgunConnectionsService;
    public readonly railgunConnectionsForAZone: RailgunConnectionsForAZoneService;
    public readonly rateLimitsForAZone: RateLimitsForAZoneService;
    public readonly registrarDomains: RegistrarDomainsService;
    public readonly secondaryDnsAcl: SecondaryDnsAclService;
    public readonly secondaryDnsPeer: SecondaryDnsPeerService;
    public readonly secondaryDnsPrimaryZone: SecondaryDnsPrimaryZoneService;
    public readonly secondaryDnsSecondaryZone: SecondaryDnsSecondaryZoneService;
    public readonly secondaryDnsTsig: SecondaryDnsTsigService;
    public readonly spectrumAggregateAnalytics: SpectrumAggregateAnalyticsService;
    public readonly spectrumAnalyticsByTime: SpectrumAnalyticsByTimeService;
    public readonly spectrumAnalyticsSummary: SpectrumAnalyticsSummaryService;
    public readonly spectrumApplications: SpectrumApplicationsService;
    public readonly sslTlsModeRecommendation: SslTlsModeRecommendationService;
    public readonly sslVerification: SslVerificationService;
    public readonly streamLiveInputs: StreamLiveInputsService;
    public readonly streamMp4Downloads: StreamMp4DownloadsService;
    public readonly streamSigningKeys: StreamSigningKeysService;
    public readonly streamSubtitlesCaptions: StreamSubtitlesCaptionsService;
    public readonly streamVideoClipping: StreamVideoClippingService;
    public readonly streamVideos: StreamVideosService;
    public readonly streamWatermarkProfile: StreamWatermarkProfileService;
    public readonly streamWebhook: StreamWebhookService;
    public readonly totalTls: TotalTlsService;
    public readonly transformRules: TransformRulesService;
    public readonly tunnelRoute: TunnelRouteService;
    public readonly tunnelVirtualNetwork: TunnelVirtualNetworkService;
    public readonly universalSslSettingsForAZone: UniversalSslSettingsForAZoneService;
    public readonly urlNormalization: UrlNormalizationService;
    public readonly user: UserService;
    public readonly userAgentBlockingRules: UserAgentBlockingRulesService;
    public readonly userApiTokens: UserApiTokensService;
    public readonly userBillingHistory: UserBillingHistoryService;
    public readonly userBillingProfile: UserBillingProfileService;
    public readonly userSAccountMemberships: UserSAccountMembershipsService;
    public readonly userSInvites: UserSInvitesService;
    public readonly userSOrganizations: UserSOrganizationsService;
    public readonly userSubscription: UserSubscriptionService;
    public readonly wafOverrides: WafOverridesService;
    public readonly wafPackages: WafPackagesService;
    public readonly wafRuleGroups: WafRuleGroupsService;
    public readonly wafRules: WafRulesService;
    public readonly waitingRoom: WaitingRoomService;
    public readonly web3Hostname: Web3HostnameService;
    public readonly whoisRecord: WhoisRecordService;
    public readonly workerAccountSettings: WorkerAccountSettingsService;
    public readonly workerBindingDeprecated: WorkerBindingDeprecatedService;
    public readonly workerCronTrigger: WorkerCronTriggerService;
    public readonly workerDomain: WorkerDomainService;
    public readonly workerFiltersDeprecated: WorkerFiltersDeprecatedService;
    public readonly workerRoutes: WorkerRoutesService;
    public readonly workerScript: WorkerScriptService;
    public readonly workerScriptDeprecated: WorkerScriptDeprecatedService;
    public readonly workersKvNamespace: WorkersKvNamespaceService;
    public readonly workersKvRequestAnalytics: WorkersKvRequestAnalyticsService;
    public readonly workersKvStoredDataAnalytics: WorkersKvStoredDataAnalyticsService;
    public readonly workerSubdomain: WorkerSubdomainService;
    public readonly workerTailLogs: WorkerTailLogsService;
    public readonly zeroTrustAccounts: ZeroTrustAccountsService;
    public readonly zeroTrustGatewayApplicationAndApplicationTypeMappings: ZeroTrustGatewayApplicationAndApplicationTypeMappingsService;
    public readonly zeroTrustGatewayCategories: ZeroTrustGatewayCategoriesService;
    public readonly zeroTrustGatewayLocations: ZeroTrustGatewayLocationsService;
    public readonly zeroTrustGatewayProxyEndpoints: ZeroTrustGatewayProxyEndpointsService;
    public readonly zeroTrustGatewayRules: ZeroTrustGatewayRulesService;
    public readonly zeroTrustLists: ZeroTrustListsService;
    public readonly zeroTrustOrganization: ZeroTrustOrganizationService;
    public readonly zeroTrustSeats: ZeroTrustSeatsService;
    public readonly zeroTrustUsers: ZeroTrustUsersService;
    public readonly zone: ZoneService;
    public readonly zoneAnalyticsDeprecated: ZoneAnalyticsDeprecatedService;
    public readonly zoneCacheSettings: ZoneCacheSettingsService;
    public readonly zoneLevelAccessApplications: ZoneLevelAccessApplicationsService;
    public readonly zoneLevelAccessGroups: ZoneLevelAccessGroupsService;
    public readonly zoneLevelAccessIdentityProviders: ZoneLevelAccessIdentityProvidersService;
    public readonly zoneLevelAccessMTlsAuthentication: ZoneLevelAccessMTlsAuthenticationService;
    public readonly zoneLevelAccessPolicies: ZoneLevelAccessPoliciesService;
    public readonly zoneLevelAccessServiceTokens: ZoneLevelAccessServiceTokensService;
    public readonly zoneLevelAccessShortLivedCertificateCAs: ZoneLevelAccessShortLivedCertificateCAsService;
    public readonly zoneLevelAuthenticatedOriginPulls: ZoneLevelAuthenticatedOriginPullsService;
    public readonly zoneLevelZeroTrustOrganization: ZoneLevelZeroTrustOrganizationService;
    public readonly zoneLockdown: ZoneLockdownService;
    public readonly zoneRatePlan: ZoneRatePlanService;
    public readonly zoneRulesets: ZoneRulesetsService;
    public readonly zoneSettings: ZoneSettingsService;
    public readonly zoneSubscription: ZoneSubscriptionService;

    public readonly request: BaseHttpRequest;

    constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = FetchHttpRequest) {
        this.request = new HttpRequest({
            BASE: config?.BASE ?? 'https://api.cloudflare.com/client/v4',
            VERSION: config?.VERSION ?? '4.0.0',
            WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,
            CREDENTIALS: config?.CREDENTIALS ?? 'include',
            TOKEN: config?.TOKEN,
            USERNAME: config?.USERNAME,
            PASSWORD: config?.PASSWORD,
            HEADERS: config?.HEADERS,
            ENCODE_PATH: config?.ENCODE_PATH,
        });

        this.accessApplications = new AccessApplicationsService(this.request);
        this.accessAuthenticationLogs = new AccessAuthenticationLogsService(this.request);
        this.accessBookmarkApplicationsDeprecated = new AccessBookmarkApplicationsDeprecatedService(this.request);
        this.accessGroups = new AccessGroupsService(this.request);
        this.accessIdentityProviders = new AccessIdentityProvidersService(this.request);
        this.accessKeyConfiguration = new AccessKeyConfigurationService(this.request);
        this.accessMTlsAuthentication = new AccessMTlsAuthenticationService(this.request);
        this.accessPolicies = new AccessPoliciesService(this.request);
        this.accessServiceTokens = new AccessServiceTokensService(this.request);
        this.accessShortLivedCertificateCAs = new AccessShortLivedCertificateCAsService(this.request);
        this.accountBillingProfile = new AccountBillingProfileService(this.request);
        this.accountLevelCustomNameservers = new AccountLevelCustomNameserversService(this.request);
        this.accountLevelCustomNameserversUsageForAZone = new AccountLevelCustomNameserversUsageForAZoneService(this.request);
        this.accountLoadBalancerMonitors = new AccountLoadBalancerMonitorsService(this.request);
        this.accountLoadBalancerPools = new AccountLoadBalancerPoolsService(this.request);
        this.accountLoadBalancerSearch = new AccountLoadBalancerSearchService(this.request);
        this.accountMembers = new AccountMembersService(this.request);
        this.accountRailguns = new AccountRailgunsService(this.request);
        this.accountRoles = new AccountRolesService(this.request);
        this.accountRulesets = new AccountRulesetsService(this.request);
        this.accounts = new AccountsService(this.request);
        this.accountSubscriptions = new AccountSubscriptionsService(this.request);
        this.analyzeCertificate = new AnalyzeCertificateService(this.request);
        this.apiShieldEndpointManagement = new ApiShieldEndpointManagementService(this.request);
        this.apiShieldSettings = new ApiShieldSettingsService(this.request);
        this.argoAnalyticsForGeolocation = new ArgoAnalyticsForGeolocationService(this.request);
        this.argoAnalyticsForZone = new ArgoAnalyticsForZoneService(this.request);
        this.argoSmartRouting = new ArgoSmartRoutingService(this.request);
        this.argoTunnel = new ArgoTunnelService(this.request);
        this.asnIntelligence = new AsnIntelligenceService(this.request);
        this.auditLogs = new AuditLogsService(this.request);
        this.availablePageRulesSettings = new AvailablePageRulesSettingsService(this.request);
        this.certificatePacks = new CertificatePacksService(this.request);
        this.cloudflareImages = new CloudflareImagesService(this.request);
        this.cloudflareImagesKeys = new CloudflareImagesKeysService(this.request);
        this.cloudflareImagesVariants = new CloudflareImagesVariantsService(this.request);
        this.cloudflareIPs = new CloudflareIPsService(this.request);
        this.cloudflareTunnel = new CloudflareTunnelService(this.request);
        this.cloudflareTunnelConfiguration = new CloudflareTunnelConfigurationService(this.request);
        this.customErrorResponses = new CustomErrorResponsesService(this.request);
        this.customHostnameFallbackOriginForAZone = new CustomHostnameFallbackOriginForAZoneService(this.request);
        this.customHostnameForAZone = new CustomHostnameForAZoneService(this.request);
        this.customPagesForAnAccount = new CustomPagesForAnAccountService(this.request);
        this.customPagesForAZone = new CustomPagesForAZoneService(this.request);
        this.customSslForAZone = new CustomSslForAZoneService(this.request);
        this.devicePostureIntegrations = new DevicePostureIntegrationsService(this.request);
        this.devicePostureRules = new DevicePostureRulesService(this.request);
        this.devices = new DevicesService(this.request);
        this.diagnostics = new DiagnosticsService(this.request);
        this.dlpPatternValidation = new DlpPatternValidationService(this.request);
        this.dlpProfiles = new DlpProfilesService(this.request);
        this.dnsAnalytics = new DnsAnalyticsService(this.request);
        this.dnsFirewall = new DnsFirewallService(this.request);
        this.dnsFirewallAnalytics = new DnsFirewallAnalyticsService(this.request);
        this.dnsFirewallAnalyticsLegacy = new DnsFirewallAnalyticsLegacyService(this.request);
        this.dnsFirewallLegacy = new DnsFirewallLegacyService(this.request);
        this.dnsRecordsForAZone = new DnsRecordsForAZoneService(this.request);
        this.dnssec = new DnssecService(this.request);
        this.domainHistory = new DomainHistoryService(this.request);
        this.domainIntelligence = new DomainIntelligenceService(this.request);
        this.durableObjectsNamespace = new DurableObjectsNamespaceService(this.request);
        this.emailRoutingDestinationAddresses = new EmailRoutingDestinationAddressesService(this.request);
        this.emailRoutingRoutingRules = new EmailRoutingRoutingRulesService(this.request);
        this.emailRoutingSettings = new EmailRoutingSettingsService(this.request);
        this.filters = new FiltersService(this.request);
        this.firewallRules = new FirewallRulesService(this.request);
        this.healthChecks = new HealthChecksService(this.request);
        this.ipAccessRulesForAnAccount = new IpAccessRulesForAnAccountService(this.request);
        this.ipAccessRulesForAUser = new IpAccessRulesForAUserService(this.request);
        this.ipAccessRulesForAZone = new IpAccessRulesForAZoneService(this.request);
        this.ipAddressManagementAddressMaps = new IpAddressManagementAddressMapsService(this.request);
        this.ipAddressManagementDynamicAdvertisement = new IpAddressManagementDynamicAdvertisementService(this.request);
        this.ipAddressManagementPrefixDelegation = new IpAddressManagementPrefixDelegationService(this.request);
        this.ipAddressManagementPrefixes = new IpAddressManagementPrefixesService(this.request);
        this.ipIntelligence = new IpIntelligenceService(this.request);
        this.ipList = new IpListService(this.request);
        this.keylessSslForAZone = new KeylessSslForAZoneService(this.request);
        this.lists = new ListsService(this.request);
        this.loadBalancerHealthcheckEvents = new LoadBalancerHealthcheckEventsService(this.request);
        this.loadBalancerMonitors = new LoadBalancerMonitorsService(this.request);
        this.loadBalancerPools = new LoadBalancerPoolsService(this.request);
        this.loadBalancerRegions = new LoadBalancerRegionsService(this.request);
        this.loadBalancers = new LoadBalancersService(this.request);
        this.logpushJobs = new LogpushJobsService(this.request);
        this.logsReceived = new LogsReceivedService(this.request);
        this.magicGreTunnels = new MagicGreTunnelsService(this.request);
        this.magicInterconnects = new MagicInterconnectsService(this.request);
        this.magicIPsecTunnels = new MagicIPsecTunnelsService(this.request);
        this.magicNetworkMonitoringConfiguration = new MagicNetworkMonitoringConfigurationService(this.request);
        this.magicNetworkMonitoringRules = new MagicNetworkMonitoringRulesService(this.request);
        this.magicPcapCollection = new MagicPcapCollectionService(this.request);
        this.magicStaticRoutes = new MagicStaticRoutesService(this.request);
        this.managedTransforms = new ManagedTransformsService(this.request);
        this.miscategorization = new MiscategorizationService(this.request);
        this.notificationAlertTypes = new NotificationAlertTypesService(this.request);
        this.notificationDestinationsWithPagerDuty = new NotificationDestinationsWithPagerDutyService(this.request);
        this.notificationHistory = new NotificationHistoryService(this.request);
        this.notificationMechanismEligibility = new NotificationMechanismEligibilityService(this.request);
        this.notificationPolicies = new NotificationPoliciesService(this.request);
        this.notificationWebhooks = new NotificationWebhooksService(this.request);
        this.organizationInvites = new OrganizationInvitesService(this.request);
        this.organizationMembers = new OrganizationMembersService(this.request);
        this.organizationRailgun = new OrganizationRailgunService(this.request);
        this.organizationRoles = new OrganizationRolesService(this.request);
        this.organizationsDeprecated = new OrganizationsDeprecatedService(this.request);
        this.originCa = new OriginCaService(this.request);
        this.pageRules = new PageRulesService(this.request);
        this.pagesDeployment = new PagesDeploymentService(this.request);
        this.pagesDomains = new PagesDomainsService(this.request);
        this.pageShield = new PageShieldService(this.request);
        this.pagesProject = new PagesProjectService(this.request);
        this.passiveDnsByIp = new PassiveDnsByIpService(this.request);
        this.perHostnameAuthenticatedOriginPull = new PerHostnameAuthenticatedOriginPullService(this.request);
        this.permissionGroups = new PermissionGroupsService(this.request);
        this.phishingUrlScanner = new PhishingUrlScannerService(this.request);
        this.queue = new QueueService(this.request);
        this.r2Bucket = new R2BucketService(this.request);
        this.radarAnnotations = new RadarAnnotationsService(this.request);
        this.radarAttacks = new RadarAttacksService(this.request);
        this.radarBgp = new RadarBgpService(this.request);
        this.radarDatasets = new RadarDatasetsService(this.request);
        this.radarDns = new RadarDnsService(this.request);
        this.radarEntities = new RadarEntitiesService(this.request);
        this.radarHttp = new RadarHttpService(this.request);
        this.radarNetFlows = new RadarNetFlowsService(this.request);
        this.radarRanking = new RadarRankingService(this.request);
        this.radarSearch = new RadarSearchService(this.request);
        this.radarSpecialevents = new RadarSpecialeventsService(this.request);
        this.radarVerifiedBots = new RadarVerifiedBotsService(this.request);
        this.railgun = new RailgunService(this.request);
        this.railgunConnections = new RailgunConnectionsService(this.request);
        this.railgunConnectionsForAZone = new RailgunConnectionsForAZoneService(this.request);
        this.rateLimitsForAZone = new RateLimitsForAZoneService(this.request);
        this.registrarDomains = new RegistrarDomainsService(this.request);
        this.secondaryDnsAcl = new SecondaryDnsAclService(this.request);
        this.secondaryDnsPeer = new SecondaryDnsPeerService(this.request);
        this.secondaryDnsPrimaryZone = new SecondaryDnsPrimaryZoneService(this.request);
        this.secondaryDnsSecondaryZone = new SecondaryDnsSecondaryZoneService(this.request);
        this.secondaryDnsTsig = new SecondaryDnsTsigService(this.request);
        this.spectrumAggregateAnalytics = new SpectrumAggregateAnalyticsService(this.request);
        this.spectrumAnalyticsByTime = new SpectrumAnalyticsByTimeService(this.request);
        this.spectrumAnalyticsSummary = new SpectrumAnalyticsSummaryService(this.request);
        this.spectrumApplications = new SpectrumApplicationsService(this.request);
        this.sslTlsModeRecommendation = new SslTlsModeRecommendationService(this.request);
        this.sslVerification = new SslVerificationService(this.request);
        this.streamLiveInputs = new StreamLiveInputsService(this.request);
        this.streamMp4Downloads = new StreamMp4DownloadsService(this.request);
        this.streamSigningKeys = new StreamSigningKeysService(this.request);
        this.streamSubtitlesCaptions = new StreamSubtitlesCaptionsService(this.request);
        this.streamVideoClipping = new StreamVideoClippingService(this.request);
        this.streamVideos = new StreamVideosService(this.request);
        this.streamWatermarkProfile = new StreamWatermarkProfileService(this.request);
        this.streamWebhook = new StreamWebhookService(this.request);
        this.totalTls = new TotalTlsService(this.request);
        this.transformRules = new TransformRulesService(this.request);
        this.tunnelRoute = new TunnelRouteService(this.request);
        this.tunnelVirtualNetwork = new TunnelVirtualNetworkService(this.request);
        this.universalSslSettingsForAZone = new UniversalSslSettingsForAZoneService(this.request);
        this.urlNormalization = new UrlNormalizationService(this.request);
        this.user = new UserService(this.request);
        this.userAgentBlockingRules = new UserAgentBlockingRulesService(this.request);
        this.userApiTokens = new UserApiTokensService(this.request);
        this.userBillingHistory = new UserBillingHistoryService(this.request);
        this.userBillingProfile = new UserBillingProfileService(this.request);
        this.userSAccountMemberships = new UserSAccountMembershipsService(this.request);
        this.userSInvites = new UserSInvitesService(this.request);
        this.userSOrganizations = new UserSOrganizationsService(this.request);
        this.userSubscription = new UserSubscriptionService(this.request);
        this.wafOverrides = new WafOverridesService(this.request);
        this.wafPackages = new WafPackagesService(this.request);
        this.wafRuleGroups = new WafRuleGroupsService(this.request);
        this.wafRules = new WafRulesService(this.request);
        this.waitingRoom = new WaitingRoomService(this.request);
        this.web3Hostname = new Web3HostnameService(this.request);
        this.whoisRecord = new WhoisRecordService(this.request);
        this.workerAccountSettings = new WorkerAccountSettingsService(this.request);
        this.workerBindingDeprecated = new WorkerBindingDeprecatedService(this.request);
        this.workerCronTrigger = new WorkerCronTriggerService(this.request);
        this.workerDomain = new WorkerDomainService(this.request);
        this.workerFiltersDeprecated = new WorkerFiltersDeprecatedService(this.request);
        this.workerRoutes = new WorkerRoutesService(this.request);
        this.workerScript = new WorkerScriptService(this.request);
        this.workerScriptDeprecated = new WorkerScriptDeprecatedService(this.request);
        this.workersKvNamespace = new WorkersKvNamespaceService(this.request);
        this.workersKvRequestAnalytics = new WorkersKvRequestAnalyticsService(this.request);
        this.workersKvStoredDataAnalytics = new WorkersKvStoredDataAnalyticsService(this.request);
        this.workerSubdomain = new WorkerSubdomainService(this.request);
        this.workerTailLogs = new WorkerTailLogsService(this.request);
        this.zeroTrustAccounts = new ZeroTrustAccountsService(this.request);
        this.zeroTrustGatewayApplicationAndApplicationTypeMappings = new ZeroTrustGatewayApplicationAndApplicationTypeMappingsService(this.request);
        this.zeroTrustGatewayCategories = new ZeroTrustGatewayCategoriesService(this.request);
        this.zeroTrustGatewayLocations = new ZeroTrustGatewayLocationsService(this.request);
        this.zeroTrustGatewayProxyEndpoints = new ZeroTrustGatewayProxyEndpointsService(this.request);
        this.zeroTrustGatewayRules = new ZeroTrustGatewayRulesService(this.request);
        this.zeroTrustLists = new ZeroTrustListsService(this.request);
        this.zeroTrustOrganization = new ZeroTrustOrganizationService(this.request);
        this.zeroTrustSeats = new ZeroTrustSeatsService(this.request);
        this.zeroTrustUsers = new ZeroTrustUsersService(this.request);
        this.zone = new ZoneService(this.request);
        this.zoneAnalyticsDeprecated = new ZoneAnalyticsDeprecatedService(this.request);
        this.zoneCacheSettings = new ZoneCacheSettingsService(this.request);
        this.zoneLevelAccessApplications = new ZoneLevelAccessApplicationsService(this.request);
        this.zoneLevelAccessGroups = new ZoneLevelAccessGroupsService(this.request);
        this.zoneLevelAccessIdentityProviders = new ZoneLevelAccessIdentityProvidersService(this.request);
        this.zoneLevelAccessMTlsAuthentication = new ZoneLevelAccessMTlsAuthenticationService(this.request);
        this.zoneLevelAccessPolicies = new ZoneLevelAccessPoliciesService(this.request);
        this.zoneLevelAccessServiceTokens = new ZoneLevelAccessServiceTokensService(this.request);
        this.zoneLevelAccessShortLivedCertificateCAs = new ZoneLevelAccessShortLivedCertificateCAsService(this.request);
        this.zoneLevelAuthenticatedOriginPulls = new ZoneLevelAuthenticatedOriginPullsService(this.request);
        this.zoneLevelZeroTrustOrganization = new ZoneLevelZeroTrustOrganizationService(this.request);
        this.zoneLockdown = new ZoneLockdownService(this.request);
        this.zoneRatePlan = new ZoneRatePlanService(this.request);
        this.zoneRulesets = new ZoneRulesetsService(this.request);
        this.zoneSettings = new ZoneSettingsService(this.request);
        this.zoneSubscription = new ZoneSubscriptionService(this.request);
    }
}

